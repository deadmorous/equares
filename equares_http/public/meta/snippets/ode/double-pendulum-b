/*#
title: Modified double pendulum
keywords: pendulum, chaos

# Modified double pendulum
The difference between this system and the conventional double pendulum is that the two links of the pendulum move in two mutually perpendicular planes (both vertical). 

TODO: more docs here
*/

#include <cmath>

struct DoublePendulum {
    int paramCount() const {
        return 5;   // l1, m1, l2, m2, g
    }
    const char *paramNames() const {
        return "l1, m1, l2, m2, g";
    }
    int varCount() const {
        return 4;   // q1, q2, dq1, dq2
    }
    const char *varNames() const {
        return "q1, q2, dq1, dq2";
    }

    // Auxiliary parameters
    double
        L1,
        M1,
        L2,
        M2,
        G,
        L12,
        L22,
        L12m,
        L22m,
        L1mg,
        L2mg;
    void prepare(const double *param) {
        L1 = param[0];
        M1 = param[1];
        L2 = param[2];
        M2 = param[3];
        G = param[4];
        L12 = L1*L1;
        L22 = L2*L2;
        L12m = L12*M1;
        L22m = L22*M2;
        L1mg = L1*M1*G;
        L2mg = L2*M2*G;
    }

    void rhs(double *out, const double *param, const double *state) const {
        out[0] = state[2];
        out[1] = state[3];
	double
            phi = state[0],
            psi = state[1],
            dphi = state[2],
            dpsi = state[3],
            sphi = sin(phi),
            spsi = sin(psi),
            cphi = cos(phi),
            cpsi = cos(psi),

            c = L1+L2*cpsi,

            aphi = L12m + M2*c*c,
            daphi = -2*M2*c*L2*dpsi*spsi,

            fphi = -daphi*dphi - G*sphi*((M1+M2)*L1 + M2*L2*cpsi),
            ddpsi = (-c*spsi*dphi*dphi - G*cphi*spsi)/L2;
	out[2] = fphi/aphi;
	out[3] = ddpsi;
    }
};

