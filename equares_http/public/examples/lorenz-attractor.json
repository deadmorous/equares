{"name":"lorenz-attractor","description":"Lorenz attractor","info":"# Lorenz attractor\n\nGenerates the projection of phase trajectory of the ?[Lorenz system](http://en.wikipedia.org/wiki/Lorenz_system) onto the plane (x, z).","keywords":["phase trajectory","lorenz attractor","example"],"script":"","public":true,"definition":"{\"boxes\":[{\"name\":\"odeParam\",\"type\":\"Param\",\"props\":{\"data\":{\"value\":{\"sigma\":\"10\",\"rho\":\"28\",\"beta\":\"8/3\"}}},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":110.671875,\"y\":94,\"ports\":[{\"pos\":3.5}]},{\"name\":\"solverParam\",\"type\":\"Param\",\"props\":{\"data\":{\"value\":{\"h\":\"0.0005\",\"n\":\"100000\",\"nout\":1}}},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":259.671875,\"y\":95,\"ports\":[{\"pos\":3.5}]},{\"name\":\"initState\",\"type\":\"Param\",\"props\":{\"data\":{\"value\":{\"x\":\"0.1\",\"y\":0,\"z\":0,\"t\":0}}},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":425.671875,\"y\":95,\"ports\":[{\"pos\":3.5}]},{\"name\":\"ode\",\"type\":\"CxxOde\",\"props\":{\"src\":{\"value\":\"/*#\\ntitle: Lorenz system\\nkeywords: lorenz attractor\\n\\n# Lorenz system\\n\\nThe ?[Lorenz system](http://en.wikipedia.org/wiki/Lorenz_system) is as follows:\\n\\n$$\\n\\\\begin{array}{rcl}\\n\\\\dot x &=& \\\\sigma(y-x),\\\\\\\\\\n\\\\dot y &=& x(\\\\rho-z) - y,\\\\\\\\\\n\\\\dot z &=& xy - \\\\beta z.\\n\\\\end{array}\\n$$\\nThis system is well known due to its chaotical behavior.\\n*/\\n\\n#include <cmath>\\n\\nstruct LorenzSystem {\\n    int paramCount() const {\\n        return 3;       // sigma, rho, beta\\n    }\\n    const char *paramNames() const {\\n        return \\\"sigma,rho,beta\\\";\\n    }\\n    int varCount() const {\\n        return 3;       // x, y, z\\n    }\\n    const char *varNames() const {\\n        return \\\"x,y,z\\\";\\n    }\\n\\n    void prepare(const double *param) {}\\n\\n    void rhs(double *out, const double *param, const double *state) const {\\n        double\\n            sigma = param[0],\\n            rho = param[1],\\n            beta = param[2],\\n            x = state[0],\\n            y = state[1],\\n            z = state[2];\\n\\n        out[0] = sigma*(y-x);\\n        out[1] = x*(rho-z) - y;\\n        out[2] = x*y - beta*z;\\n    }\\n};\\n\"},\"srcExample\":{\"value\":\"#include <cmath>\\n\\nstruct pendulum {\\n    int paramCount() const {\\n        return 2;       // l, g\\n    }\\n    const char *paramNames() const {\\n        return \\\"l,g\\\";   // Can also return empty string or null ptr\\n    }\\n    int varCount() const {\\n        return 2;       // q, dq\\n    }\\n    const char *varNames() const {\\n        return \\\"q,dq\\\";  // Can also return empty string or null ptr\\n    }\\n\\n    // Auxiliary parameters\\n    double g_l;\\n    void prepare(const double *param) {\\n        g_l = param[1]/param[0];\\n    }\\n\\n    void rhs(double *out, const double *param, const double *state) const {\\n        out[0] = state[1];\\n        out[1] = -g_l * sin(state[0]);\\n    }\\n};\\n\"},\"useQmake\":{\"value\":true}},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":134.671875,\"y\":189,\"ports\":[{\"pos\":1.5},{\"pos\":0.7},{\"pos\":0.3}]},{\"name\":\"solver\",\"type\":\"Rk4\",\"props\":{},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":347.671875,\"y\":188,\"ports\":[{\"pos\":1.7},{\"pos\":1.3},{\"pos\":2.7},{\"pos\":0.5},{\"pos\":3.7},{\"pos\":2.3},{\"pos\":3.3}]},{\"name\":\"canvas\",\"type\":\"Canvas\",\"props\":{\"param\":{\"value\":{\"x\":{\"vmin\":\"-25\",\"vmax\":\"25\",\"resolution\":500},\"y\":{\"vmin\":\"0\",\"vmax\":\"50\",\"resolution\":500}}},\"refreshInterval\":{\"value\":1000},\"timeCheckCount\":{\"value\":100},\"clearOnRestart\":{\"value\":false},\"withInputValue\":{\"value\":false}},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":345.671875,\"y\":330,\"ports\":[{\"pos\":1.3},{\"pos\":1.7},{\"pos\":2.5},{\"pos\":0.50972180167955},{\"pos\":3.503742566971174}]},{\"name\":\"bitmap\",\"type\":\"Bitmap\",\"props\":{\"fileName\":{\"value\":\"result.png\"},\"valueRange\":{\"value\":{\"vmin\":0,\"vmax\":1}},\"colorMap\":{\"value\":[{\"pos\":0,\"color\":16777215},{\"pos\":1,\"color\":0}]}},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":347.671875,\"y\":405,\"ports\":[{\"pos\":1.5}]},{\"name\":\"projection\",\"type\":\"Projection\",\"props\":{\"indices\":{\"value\":[0,2]}},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":390.671875,\"y\":256,\"ports\":[{\"pos\":1.5},{\"pos\":3.5}]},{\"name\":\"pan-zoom\",\"type\":\"RectInput\",\"props\":{\"initRect\":{\"value\":{\"xmin\":\"-25\",\"xmax\":\"25\",\"ymin\":\"0\",\"ymax\":\"50\"}},\"keepAspectRatio\":{\"value\":false},\"withActivator\":{\"value\":false},\"restartOnInput\":{\"value\":true},\"refBitmap\":{\"value\":\"result.png\"}},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":510.8333282470703,\"y\":330,\"ports\":[{\"pos\":2.4877823702068502}]},{\"name\":\"pause\",\"type\":\"Pause\",\"props\":{},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":105.83332824707031,\"y\":362,\"ports\":[{\"pos\":1.5}]}],\"links\":[{\"source\":{\"box\":\"solverParam\",\"port\":\"output\"},\"target\":{\"box\":\"solver\",\"port\":\"parameters\"}},{\"source\":{\"box\":\"solver\",\"port\":\"initState\"},\"target\":{\"box\":\"initState\",\"port\":\"output\"}},{\"source\":{\"box\":\"solver\",\"port\":\"nextState\"},\"target\":{\"box\":\"projection\",\"port\":\"input\"}},{\"source\":{\"box\":\"canvas\",\"port\":\"input\"},\"target\":{\"box\":\"projection\",\"port\":\"output\"}},{\"source\":{\"box\":\"canvas\",\"port\":\"flush\"},\"target\":{\"box\":\"solver\",\"port\":\"finish\"}},{\"source\":{\"box\":\"canvas\",\"port\":\"output\"},\"target\":{\"box\":\"bitmap\",\"port\":\"input\"}},{\"source\":{\"box\":\"ode\",\"port\":\"parameters\"},\"target\":{\"box\":\"odeParam\",\"port\":\"output\"}},{\"source\":{\"box\":\"ode\",\"port\":\"state\"},\"target\":{\"box\":\"solver\",\"port\":\"rhsState\"}},{\"source\":{\"box\":\"ode\",\"port\":\"oderhs\"},\"target\":{\"box\":\"solver\",\"port\":\"rhs\"}},{\"source\":{\"box\":\"canvas\",\"port\":\"range\"},\"target\":{\"box\":\"pan-zoom\",\"port\":\"output\"}}]}"}