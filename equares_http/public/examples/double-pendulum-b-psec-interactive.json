{"name":"double-pendulum-b-psec-interactive","description":"Double pendulum b, Poincare map (interactive)","info":"# Double pendulum b, Poincare map (interactive)\n\nGenerates Poincare map for modified double pendulum system. The difference between this system and the conventional double pendulum is that the two links of the pendulum move in two mutually perpendicular planes (both vertical). \n\nMap cross-section is the hyperplane q2=0. The output is the projection of Poincare map onto plane (q1, dq1).\n\nUser can change initial conditions by moving sliders (due to **isInput** box of type ?[RangeInput](/doc#box/RangeInput)\n\nThis example also shows how to use the ?[CxxOde](/doc#box/CxxOde) box that allows user to provide his/her own ODE system.","keywords":["poincare map","double pendulum"],"script":"","public":true,"definition":"{\"boxes\":[{\"name\":\"odeParam\",\"info\":{\"inputs\":[],\"outputs\":[{\"name\":\"output\",\"help\":\"Parameter data; port format is determined by peer\",\"pos\":3.5}]},\"type\":\"Param\",\"props\":{\"data\":{\"value\":{\"l1\":1,\"m1\":1,\"l2\":0.6,\"m2\":1,\"g\":9.8}}},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":111.671875,\"y\":94,\"ports\":[{\"pos\":3.5}]},{\"name\":\"solverParam\",\"info\":{\"inputs\":[],\"outputs\":[{\"name\":\"output\",\"help\":\"Parameter data; port format is determined by peer\",\"pos\":3.5}]},\"type\":\"Param\",\"props\":{\"data\":{\"value\":{\"h\":0.002,\"n\":0,\"nout\":1}}},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":244.671875,\"y\":94,\"ports\":[{\"pos\":3.5}]},{\"name\":\"initState\",\"info\":{\"inputs\":[],\"outputs\":[{\"name\":\"output\",\"help\":\"Parameter data; port format is determined by peer\",\"pos\":3.5}]},\"type\":\"Param\",\"props\":{\"data\":{\"value\":{\"q1\":\"0.02513\",\"q2\":\"1.15296\",\"dq1\":\"-2.34\",\"dq2\":\"2.28\",\"t\":0}}},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":438.671875,\"y\":54,\"ports\":[{\"pos\":3.5}]},{\"name\":\"ode\",\"info\":{\"inputs\":[{\"name\":\"parameters\",\"format\":[5],\"help\":\"Parameters of ODE system\",\"hints\":[\"l1\",\"m1\",\"l2\",\"m2\",\"g\"],\"pos\":1.5},{\"name\":\"state\",\"format\":[5],\"help\":\"State variables of ODE system, including the time\",\"hints\":[\"q1\",\"q2\",\"dq1\",\"dq2\",\"t\"],\"pos\":0.7}],\"outputs\":[{\"name\":\"oderhs\",\"format\":[4],\"help\":\"Right hand side of ODE system\",\"pos\":0.3}]},\"type\":\"CxxOde\",\"props\":{\"src\":{\"value\":\"#include <cmath>\\n\\nstruct DoublePendulum {\\n    int paramCount() const {\\n        return 5;   // l1, m1, l2, m2, g\\n    }\\n    const char *paramNames() const {\\n        return \\\"l1, m1, l2, m2, g\\\";\\n    }\\n    int varCount() const {\\n        return 4;   // q1, q2, dq1, dq2\\n    }\\n    const char *varNames() const {\\n        return \\\"q1, q2, dq1, dq2\\\";\\n    }\\n\\n    // Auxiliary parameters\\n    double\\n        L1,\\n        M1,\\n        L2,\\n        M2,\\n        G,\\n        L12,\\n        L22,\\n        L12m,\\n        L22m,\\n        L1mg,\\n        L2mg;\\n    void prepare(const double *param) {\\n        L1 = param[0];\\n        M1 = param[1];\\n        L2 = param[2];\\n        M2 = param[3];\\n        G = param[4];\\n        L12 = L1*L1;\\n        L22 = L2*L2;\\n        L12m = L12*M1;\\n        L22m = L22*M2;\\n        L1mg = L1*M1*G;\\n        L2mg = L2*M2*G;\\n    }\\n\\n    void rhs(double *out, const double *param, const double *state) const {\\n        out[0] = state[2];\\n        out[1] = state[3];\\n\\tdouble\\n            phi = state[0],\\n            psi = state[1],\\n            dphi = state[2],\\n            dpsi = state[3],\\n            sphi = sin(phi),\\n            spsi = sin(psi),\\n            cphi = cos(phi),\\n            cpsi = cos(psi),\\n\\n            c = L1+L2*cpsi,\\n\\n            aphi = L12m + M2*c*c,\\n            daphi = -2*M2*c*L2*dpsi*spsi,\\n\\n            fphi = -daphi*dphi - G*sphi*((M1+M2)*L1 + M2*L2*cpsi),\\n            ddpsi = (-c*spsi*dphi*dphi - G*cphi*spsi)/L2;\\n\\tout[2] = fphi/aphi;\\n\\tout[3] = ddpsi;\\n    }\\n};\\n\"},\"srcExample\":{\"value\":\"#include <cmath>\\n\\nstruct pendulum {\\n    int paramCount() const {\\n        return 2;       // l, g\\n    }\\n    const char *paramNames() const {\\n        return \\\"l,g\\\";   // Can also return empty string or null ptr\\n    }\\n    int varCount() const {\\n        return 2;       // q, dq\\n    }\\n    const char *varNames() const {\\n        return \\\"q,dq\\\";  // Can also return empty string or null ptr\\n    }\\n\\n    // Auxiliary parameters\\n    double g_l;\\n    void prepare(const double *param) {\\n        g_l = param[1]/param[0];\\n    }\\n\\n    void rhs(double *out, const double *param, const double *state) const {\\n        out[0] = state[1];\\n        out[1] = -g_l * sin(state[0]);\\n    }\\n};\\n\"},\"useQmake\":{\"value\":true}},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":134.671875,\"y\":189,\"ports\":[{\"pos\":1.5},{\"pos\":0.7},{\"pos\":0.3}]},{\"name\":\"solver\",\"info\":{\"inputs\":[{\"name\":\"parameters\",\"format\":[3],\"help\":\"Time step, number of integration steps to take (0 means infinite), number of steps between outputs (0 means output final state only)\",\"hints\":[\"h\",\"n\",\"nout\"],\"pos\":1.7},{\"name\":\"initState\",\"help\":\"Initial state for the ODE system\",\"pos\":1.3},{\"name\":\"rhs\",\"help\":\"Right hand side of the ODE system\",\"pos\":2.7},{\"name\":\"stop\",\"help\":\"Any data on this port causes solver to terminate\",\"pos\":0.5}],\"outputs\":[{\"name\":\"nextState\",\"help\":\"Next state of the ODE system\",\"pos\":3.7},{\"name\":\"rhsState\",\"help\":\"System state to pass to the ODE right hand side calculator\",\"pos\":2.3},{\"name\":\"finish\",\"format\":[0],\"help\":\"Data is emitted to this port as soon as the integration finishes\",\"pos\":3.3}]},\"type\":\"Rk4\",\"props\":{},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":271.671875,\"y\":190,\"ports\":[{\"pos\":1.7},{\"pos\":1.3},{\"pos\":2.7},{\"pos\":3.67465086996337},{\"pos\":0.33515825906936875},{\"pos\":2.3},{\"pos\":3.3}]},{\"name\":\"canvas\",\"info\":{\"inputs\":[{\"name\":\"input\",\"format\":[2],\"help\":\"2D input for canvas\",\"pos\":1.3},{\"name\":\"flush\",\"help\":\"Any incoming signal on this port causes this canvas to flush its data (i.e., pass the entire canvas data to the output port)\",\"pos\":1.7},{\"name\":\"clear\",\"help\":\"Any incoming signal on this port causes this canvas to clear its data and then flush\",\"pos\":2.5}],\"outputs\":[{\"name\":\"output\",\"format\":[100,100],\"help\":\"Canvas output (each data point is a 2D array of canvas cell data)\",\"pos\":3.5}]},\"type\":\"Canvas\",\"props\":{\"param\":{\"value\":{\"x\":{\"vmin\":\"-1.570796327\",\"vmax\":\"1.570796327\",\"resolution\":500},\"y\":{\"vmin\":\"-6.283185307\",\"vmax\":\"5.654866776\",\"resolution\":500}}},\"refreshInterval\":{\"value\":1000}},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":291.671875,\"y\":397,\"ports\":[{\"pos\":1.4562322443181819},{\"pos\":1.928174978956229},{\"pos\":0.9460059986533635},{\"pos\":3.5}]},{\"name\":\"bitmap\",\"info\":{\"inputs\":[{\"name\":\"input\",\"help\":\"2D input for bitmap\",\"pos\":1.5}],\"outputs\":[]},\"type\":\"Bitmap\",\"props\":{\"fileName\":{\"value\":\"result.png\"}},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":293.671875,\"y\":460,\"ports\":[{\"pos\":1.5}]},{\"name\":\"proj\",\"info\":{\"inputs\":[{\"name\":\"input\",\"help\":\"Incoming points (each point is a vector)\",\"pos\":1.5}],\"outputs\":[{\"name\":\"output\",\"format\":[0],\"help\":\"Point projections onto hyperplane determined by the 'indices' property\",\"pos\":3.5}]},\"type\":\"Projection\",\"props\":{\"indices\":{\"value\":[0,2]}},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":307.671875,\"y\":320,\"ports\":[{\"pos\":1.5},{\"pos\":3.5}]},{\"name\":\"psec\",\"info\":{\"inputs\":[{\"name\":\"input\",\"help\":\"Trajectory points\",\"pos\":1.5}],\"outputs\":[{\"name\":\"output\",\"help\":\"Trajectory cross-section points\",\"pos\":3.5}]},\"type\":\"CrossSection\",\"props\":{\"param\":{\"value\":{\"index\":1,\"pos\":0,\"flags\":[\"positive\"]}}},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":303.65625,\"y\":255,\"ports\":[{\"pos\":1.5},{\"pos\":3.5}]},{\"name\":\"isInput\",\"info\":{\"inputs\":[{\"name\":\"activator\",\"help\":\"Activation port\",\"pos\":1.3},{\"name\":\"input\",\"help\":\"Input data port\",\"pos\":1.7}],\"outputs\":[{\"name\":\"output\",\"help\":\"Output data port\",\"pos\":3.5}]},\"type\":\"RangeInput\",\"props\":{\"param\":{\"value\":[{\"index\":0,\"name\":\"q1\",\"vmin\":0,\"vmax\":\"3.14159\",\"resolution\":1000},{\"index\":1,\"name\":\"q2\",\"vmin\":0,\"vmax\":\"3.14159\",\"resolution\":1000},{\"index\":2,\"name\":\"dq1\",\"vmin\":\"-10\",\"vmax\":\"10\",\"resolution\":1000},{\"index\":3,\"name\":\"dq2\",\"vmin\":\"-10\",\"vmax\":\"10\",\"resolution\":1000}]},\"sync\":{\"value\":false},\"loop\":{\"value\":false}},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":464,\"y\":124,\"ports\":[{\"pos\":3.3274436090225565},{\"pos\":1.7},{\"pos\":2.458140559594624}]},{\"name\":\"isSplit\",\"info\":{\"inputs\":[{\"name\":\"input\",\"help\":\"Input data port\",\"pos\":1.5}],\"outputs\":[{\"name\":\"out_1\",\"help\":\"Output data port 1\",\"pos\":3.3},{\"name\":\"out_2\",\"help\":\"Output data port 2\",\"pos\":3.7}]},\"type\":\"Split\",\"props\":{\"outputPortCount\":{\"value\":2}},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":355.953125,\"y\":140,\"ports\":[{\"pos\":0.7878810925921902},{\"pos\":3.3763905400815215},{\"pos\":2.5340764404935525}]}],\"links\":[{\"source\":{\"box\":\"solverParam\",\"port\":\"output\"},\"target\":{\"box\":\"solver\",\"port\":\"parameters\"}},{\"source\":{\"box\":\"solver\",\"port\":\"nextState\"},\"target\":{\"box\":\"psec\",\"port\":\"input\"}},{\"source\":{\"box\":\"psec\",\"port\":\"output\"},\"target\":{\"box\":\"proj\",\"port\":\"input\"}},{\"source\":{\"box\":\"ode\",\"port\":\"parameters\"},\"target\":{\"box\":\"odeParam\",\"port\":\"output\"}},{\"source\":{\"box\":\"ode\",\"port\":\"state\"},\"target\":{\"box\":\"solver\",\"port\":\"rhsState\"}},{\"source\":{\"box\":\"ode\",\"port\":\"oderhs\"},\"target\":{\"box\":\"solver\",\"port\":\"rhs\"}},{\"source\":{\"box\":\"canvas\",\"port\":\"input\"},\"target\":{\"box\":\"proj\",\"port\":\"output\"}},{\"source\":{\"box\":\"canvas\",\"port\":\"flush\"},\"target\":{\"box\":\"solver\",\"port\":\"finish\"}},{\"source\":{\"box\":\"canvas\",\"port\":\"output\"},\"target\":{\"box\":\"bitmap\",\"port\":\"input\"}},{\"source\":{\"box\":\"isInput\",\"port\":\"input\"},\"target\":{\"box\":\"initState\",\"port\":\"output\"}},{\"source\":{\"box\":\"solver\",\"port\":\"nextState\"},\"target\":{\"box\":\"isInput\",\"port\":\"activator\"}},{\"source\":{\"box\":\"isInput\",\"port\":\"output\"},\"target\":{\"box\":\"isSplit\",\"port\":\"input\"}},{\"source\":{\"box\":\"isSplit\",\"port\":\"out_2\"},\"target\":{\"box\":\"solver\",\"port\":\"initState\"}},{\"source\":{\"box\":\"isSplit\",\"port\":\"out_1\"},\"target\":{\"box\":\"canvas\",\"port\":\"clear\"}}]}"}