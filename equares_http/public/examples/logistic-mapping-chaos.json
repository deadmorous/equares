{"name":"logistic-mapping-chaos","description":"Chaos induced by logistic mapping","info":"# Chaos induced by logistic mapping\nThe logisting mapping is determined by the following finite difference equation:\n$$\nx_{n+1} = x_n^2 + c\n$$\n\nSee also =[Mandelbrot set](/editor?sim=mandelbrot).\n\nTODO: moar docs","keywords":[],"script":"","public":true,"definition":"{\"boxes\":[{\"name\":\"testFde\",\"info\":{\"inputs\":[{\"name\":\"parameters\",\"format\":[1],\"help\":\"Parameters of FDE system\",\"hints\":[\"c\"],\"pos\":1.5},{\"name\":\"state\",\"format\":[1],\"help\":\"State variables of FDE system\",\"hints\":[\"x\"],\"pos\":0.7}],\"outputs\":[{\"name\":\"nextState\",\"format\":[1],\"help\":\"Next state of FDE system\",\"hints\":[\"x\"],\"pos\":0.3}]},\"type\":\"CxxFde\",\"props\":{\"src\":{\"value\":\"struct logistics {\\n    int paramCount() const {\\n        return 1;       // c\\n    }\\n    const char *paramNames() const {\\n        return \\\"c\\\";     // Can also return empty string or null ptr\\n    }\\n    int varCount() const {\\n        return 1;       // x\\n    }\\n    const char *varNames() const {\\n        return \\\"x\\\";     // Can also return empty string or null ptr\\n    }\\n\\n    // Auxiliary parameters\\n    double c;\\n    void prepare(const double *param) {\\n        c = param[0];\\n    }\\n\\n    void nextState(double *out, const double *param, const double *state) const {\\n        out[0] = c - state[0]*state[0];\\n    }\\n};\\n\"},\"srcExample\":{\"value\":\"struct logistics {\\n    int paramCount() const {\\n        return 1;       // c\\n    }\\n    const char *paramNames() const {\\n        return \\\"c\\\";     // Can also return empty string or null ptr\\n    }\\n    int varCount() const {\\n        return 1;       // x\\n    }\\n    const char *varNames() const {\\n        return \\\"x\\\";     // Can also return empty string or null ptr\\n    }\\n\\n    // Auxiliary parameters\\n    double c;\\n    void prepare(const double *param) {\\n        c = param[0];\\n    }\\n\\n    void nextState(double *out, const double *param, const double *state) const {\\n        out[0] = c - state[0]*state[0];\\n    }\\n};\\n\"},\"useQmake\":{\"value\":true}},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":179,\"y\":259,\"ports\":[{\"pos\":1.664519123283296},{\"pos\":0.7},{\"pos\":0.3}]},{\"name\":\"sdeParam\",\"info\":{\"inputs\":[],\"outputs\":[{\"name\":\"output\",\"help\":\"Parameter data; port format is determined by peer\",\"pos\":3.3},{\"name\":\"flush\",\"format\":[0],\"help\":\"Signal indicating that all frames have been generated\",\"pos\":3.7}]},\"type\":\"ParamArray\",\"props\":{\"data\":{\"value\":[{\"c\":\"-0.25\"},{\"c\":\"2\"}]},\"withActivator\":{\"value\":false}},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":55,\"y\":56,\"ports\":[{\"pos\":3.7144074675324674},{\"pos\":3.2214056324110674}]},{\"name\":\"initState\",\"info\":{\"inputs\":[],\"outputs\":[{\"name\":\"output\",\"help\":\"Parameter data; port format is determined by peer\",\"pos\":3.5}]},\"type\":\"Param\",\"props\":{\"data\":{\"value\":{\"x\":0}}},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":277,\"y\":116,\"ports\":[{\"pos\":3.272322969397147}]},{\"name\":\"solver\",\"info\":{\"inputs\":[{\"name\":\"parameters\",\"format\":[3],\"help\":\"number of integration steps to take (0 means infinite), number of initial steps to skip, number of steps between outputs (0 means output final state only)\",\"hints\":[\"n\",\"nskip\",\"nout\"],\"pos\":1.7},{\"name\":\"initState\",\"help\":\"Initial state for the FDE system\",\"pos\":1.3},{\"name\":\"fdeIn\",\"help\":\"Next state of the FDE system, obtained from the FDE\",\"pos\":2.7},{\"name\":\"stop\",\"help\":\"Any data on this port causes iterator to terminate\",\"pos\":0.5}],\"outputs\":[{\"name\":\"nextState\",\"help\":\"Next state of the FDE system, for further processing\",\"pos\":3.7},{\"name\":\"fdeOut\",\"help\":\"System state to pass to the FDE next state calculator\",\"pos\":2.3},{\"name\":\"finish\",\"format\":[0],\"help\":\"Data is emitted to this port as soon as the iterations finish\",\"pos\":3.3}]},\"type\":\"FdeIterator\",\"props\":{},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":313,\"y\":259,\"ports\":[{\"pos\":1.2772612003381234},{\"pos\":1.6373626373626373},{\"pos\":2.7},{\"pos\":0.5},{\"pos\":3.7},{\"pos\":2.3},{\"pos\":3.3}]},{\"name\":\"solverParam\",\"info\":{\"inputs\":[],\"outputs\":[{\"name\":\"output\",\"help\":\"Parameter data; port format is determined by peer\",\"pos\":3.5}]},\"type\":\"Param\",\"props\":{\"data\":{\"value\":{\"n\":\"1000\",\"nskip\":\"500\",\"nout\":\"1\"}}},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":326,\"y\":184,\"ports\":[{\"pos\":3.38146735259507}]},{\"name\":\"canvas\",\"info\":{\"inputs\":[{\"name\":\"input\",\"format\":[2],\"help\":\"2D input for canvas\",\"pos\":1.3},{\"name\":\"flush\",\"help\":\"Any incoming signal on this port causes this canvas to flush its data (i.e., pass the entire canvas data to the output port)\",\"pos\":1.7},{\"name\":\"clear\",\"help\":\"Any incoming signal on this port causes this canvas to clear its data and then flush\",\"pos\":2.5}],\"outputs\":[{\"name\":\"output\",\"format\":[100,100],\"help\":\"Canvas output (each data point is a 2D array of canvas cell data)\",\"pos\":3.5}]},\"type\":\"Canvas\",\"props\":{\"param\":{\"value\":{\"x\":{\"vmin\":\"-0.25\",\"vmax\":\"2\",\"resolution\":500},\"y\":{\"vmin\":\"-2\",\"vmax\":\"2\",\"resolution\":500}}},\"refreshInterval\":{\"value\":0}},\"status\":{\"level\":\"warning\",\"text\":\"Unknown port format\"},\"x\":52,\"y\":456,\"ports\":[{\"pos\":1.253125},{\"pos\":1.7},{\"pos\":0.4717036745922578},{\"pos\":3.5}]},{\"name\":\"bitmap\",\"info\":{\"inputs\":[{\"name\":\"input\",\"help\":\"2D input for bitmap\",\"pos\":1.5}],\"outputs\":[]},\"type\":\"Bitmap\",\"props\":{\"fileName\":{\"value\":\"result.png\"}},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":54,\"y\":514,\"ports\":[{\"pos\":1.5}]},{\"name\":\"interpSdeParam\",\"info\":{\"inputs\":[{\"name\":\"input\",\"help\":\"Input data\",\"pos\":1.5}],\"outputs\":[{\"name\":\"output\",\"help\":\"Interpolated data\",\"pos\":3.5}]},\"type\":\"Interpolator\",\"props\":{\"count\":{\"value\":500}},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":99,\"y\":116,\"ports\":[{\"pos\":1.7383659383468835},{\"pos\":3.3500571646341464}]},{\"name\":\"solverTrigger\",\"info\":{\"inputs\":[{\"name\":\"control_in\",\"help\":\"Controlling value input port\",\"pos\":1.7},{\"name\":\"value_in\",\"help\":\"Replicated value input port\",\"pos\":1.3}],\"outputs\":[{\"name\":\"control_out\",\"help\":\"Controlling value output port\",\"pos\":3.3},{\"name\":\"value_out\",\"help\":\"Replicated value output port\",\"pos\":3.7}]},\"type\":\"Replicator\",\"props\":{},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":170,\"y\":184,\"ports\":[{\"pos\":1.7},{\"pos\":1.3},{\"pos\":3.3},{\"pos\":3.7}]},{\"name\":\"joinOutput\",\"info\":{\"inputs\":[{\"name\":\"in_1\",\"help\":\"Input data port 1\",\"pos\":2.5},{\"name\":\"in_2\",\"help\":\"Input data port 2\",\"pos\":1.5}],\"outputs\":[{\"name\":\"out\",\"help\":\"Output data port\",\"pos\":3.5}]},\"type\":\"Join\",\"props\":{},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":135,\"y\":375,\"ports\":[{\"pos\":1.7612763458608431},{\"pos\":1.2022664835164836},{\"pos\":3.5363667582417584}]},{\"name\":\"prepareOuput\",\"info\":{\"inputs\":[{\"name\":\"control_in\",\"help\":\"Controlling value input port\",\"pos\":1.7},{\"name\":\"value_in\",\"help\":\"Replicated value input port\",\"pos\":1.3}],\"outputs\":[{\"name\":\"control_out\",\"help\":\"Controlling value output port\",\"pos\":3.3},{\"name\":\"value_out\",\"help\":\"Replicated value output port\",\"pos\":3.7}]},\"type\":\"Replicator\",\"props\":{},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":132,\"y\":309,\"ports\":[{\"pos\":0.4868188888274098},{\"pos\":1.8278251072557579},{\"pos\":3.680393941055402},{\"pos\":3.2192851027397262}]}],\"links\":[{\"source\":{\"box\":\"testFde\",\"port\":\"nextState\"},\"target\":{\"box\":\"solver\",\"port\":\"fdeIn\"}},{\"source\":{\"box\":\"solver\",\"port\":\"fdeOut\"},\"target\":{\"box\":\"testFde\",\"port\":\"state\"}},{\"source\":{\"box\":\"solver\",\"port\":\"parameters\"},\"target\":{\"box\":\"solverParam\",\"port\":\"output\"}},{\"source\":{\"box\":\"canvas\",\"port\":\"output\"},\"target\":{\"box\":\"bitmap\",\"port\":\"input\"}},{\"source\":{\"box\":\"interpSdeParam\",\"port\":\"input\"},\"target\":{\"box\":\"sdeParam\",\"port\":\"output\"}},{\"source\":{\"box\":\"sdeParam\",\"port\":\"flush\"},\"target\":{\"box\":\"canvas\",\"port\":\"flush\"}},{\"source\":{\"box\":\"interpSdeParam\",\"port\":\"output\"},\"target\":{\"box\":\"solverTrigger\",\"port\":\"control_in\"}},{\"source\":{\"box\":\"testFde\",\"port\":\"parameters\"},\"target\":{\"box\":\"solverTrigger\",\"port\":\"control_out\"}},{\"source\":{\"box\":\"solverTrigger\",\"port\":\"value_in\"},\"target\":{\"box\":\"initState\",\"port\":\"output\"}},{\"source\":{\"box\":\"solverTrigger\",\"port\":\"value_out\"},\"target\":{\"box\":\"solver\",\"port\":\"initState\"}},{\"source\":{\"box\":\"joinOutput\",\"port\":\"out\"},\"target\":{\"box\":\"canvas\",\"port\":\"input\"}},{\"source\":{\"box\":\"prepareOuput\",\"port\":\"value_in\"},\"target\":{\"box\":\"interpSdeParam\",\"port\":\"output\"}},{\"source\":{\"box\":\"solver\",\"port\":\"nextState\"},\"target\":{\"box\":\"prepareOuput\",\"port\":\"control_in\"}},{\"source\":{\"box\":\"prepareOuput\",\"port\":\"control_out\"},\"target\":{\"box\":\"joinOutput\",\"port\":\"in_2\"}},{\"source\":{\"box\":\"prepareOuput\",\"port\":\"value_out\"},\"target\":{\"box\":\"joinOutput\",\"port\":\"in_1\"}}]}"}