{"name":"forced-duffing-psec","description":"Double pendulum, Poincare map (interactive 2)","info":"# Forced Duffing equation, Poincare map\n\nTODO: docs here","keywords":["poincare map","double pendulum"],"script":"var\n    omega = 1,\n    T = 2*Math.PI/omega","public":true,"definition":"{\"boxes\":[{\"name\":\"odeParam\",\"type\":\"Param\",\"props\":{\"data\":{\"value\":{\"alpha\":\"-1\",\"beta\":\"1\",\"delta\":\"0.2\",\"gamma\":\"0.3\",\"omega\":\"omega\"}}},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":97.671875,\"y\":45,\"ports\":[{\"pos\":3.5}]},{\"name\":\"solverParam\",\"type\":\"Param\",\"props\":{\"data\":{\"value\":{\"h\":\"0.01*T\",\"n\":0,\"nout\":\"100\"}}},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":277.671875,\"y\":43,\"ports\":[{\"pos\":3.5}]},{\"name\":\"initState\",\"type\":\"Param\",\"props\":{\"data\":{\"value\":{\"q\":0,\"dq\":0,\"t\":0}}},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":435.671875,\"y\":41,\"ports\":[{\"pos\":3.5}]},{\"name\":\"ode\",\"type\":\"CxxOde\",\"props\":{\"src\":{\"value\":\"/*#\\ntitle: Duffing forced oscillator\\nkeywords: oscillator\\n\\n# Duffing forced oscillator\\n\\nThe equation of forced Duffing oscillator oscillator is as follows:\\n$$\\n\\\\ddot x + \\\\delta\\\\dot x + \\\\alpha x + \\\\beta x^3 = \\\\gamma\\\\cos(\\\\omega t)\\n$$\\nSee this ?[article in Wikipedia](http://en.wikipedia.org/wiki/Duffing_oscillator) for more information.\\n*/\\n\\n#include <cmath>\\n\\nstruct DuffingFreeOscillator {\\n    int paramCount() const {\\n        return 5;       // alpha, beta, delta, gamma, omega\\n    }\\n    const char *paramNames() const {\\n        return \\\"alpha, beta, delta, gamma, omega\\\";   // Can also return empty string or null ptr\\n    }\\n    int varCount() const {\\n        return 2;       // q, dq\\n    }\\n    const char *varNames() const {\\n        return \\\"q,dq\\\";  // Can also return empty string or null ptr\\n    }\\n\\n    // Auxiliary parameters\\n    void prepare(const double *param) {\\n    }\\n\\n    void rhs(double *out, const double *param, const double *state) const {\\n        double x = state[0], v = state[1], t = state[2],\\n               alpha = param[0],\\n               beta = param[1],\\n               delta = param[2],\\n               gamma = param[3],\\n               omega = param[4];\\n        out[0] = v;\\n        out[1] = gamma*cos(omega*t) - delta*v - x*(alpha + beta*x*x);\\n    }\\n};\\n\"},\"srcExample\":{\"value\":\"#include <cmath>\\n\\nstruct pendulum {\\n    int paramCount() const {\\n        return 2;       // l, g\\n    }\\n    const char *paramNames() const {\\n        return \\\"l,g\\\";   // Can also return empty string or null ptr\\n    }\\n    int varCount() const {\\n        return 2;       // q, dq\\n    }\\n    const char *varNames() const {\\n        return \\\"q,dq\\\";  // Can also return empty string or null ptr\\n    }\\n\\n    // Auxiliary parameters\\n    double g_l;\\n    void prepare(const double *param) {\\n        g_l = param[1]/param[0];\\n    }\\n\\n    void rhs(double *out, const double *param, const double *state) const {\\n        out[0] = state[1];\\n        out[1] = -g_l * sin(state[0]);\\n    }\\n};\\n\"},\"useQmake\":{\"value\":true}},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":165.671875,\"y\":126,\"ports\":[{\"pos\":3.518706395348837},{\"pos\":0.7},{\"pos\":0.3}]},{\"name\":\"solver\",\"type\":\"Rk4\",\"props\":{},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":334.671875,\"y\":125,\"ports\":[{\"pos\":1.7},{\"pos\":1.3},{\"pos\":2.7},{\"pos\":0.35190911125124597},{\"pos\":3.275727800425381},{\"pos\":2.3},{\"pos\":3.5648466117216118}]},{\"name\":\"canvas\",\"type\":\"Canvas\",\"props\":{\"param\":{\"value\":{\"x\":{\"vmin\":\"-3\",\"vmax\":\"3\",\"resolution\":500},\"y\":{\"vmin\":\"-3\",\"vmax\":\"3\",\"resolution\":500}}},\"refreshInterval\":{\"value\":1000},\"timeCheckCount\":{\"value\":100},\"clearOnRestart\":{\"value\":false},\"withInputValue\":{\"value\":false}},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":345.671875,\"y\":398,\"ports\":[{\"pos\":1.7486293859649122},{\"pos\":1.151803861788618},{\"pos\":2.527052414052226},{\"pos\":3.5},{\"pos\":3.5}]},{\"name\":\"bitmap\",\"type\":\"Bitmap\",\"props\":{\"fileName\":{\"value\":\"result.png\"},\"valueRange\":{\"value\":{\"vmin\":0,\"vmax\":1}},\"colorMap\":{\"value\":[{\"pos\":0,\"color\":16777215},{\"pos\":1,\"color\":0}]}},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":347.671875,\"y\":473,\"ports\":[{\"pos\":1.5}]},{\"name\":\"projection\",\"type\":\"Projection\",\"props\":{\"indices\":{\"value\":[0,1]}},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":301.671875,\"y\":346,\"ports\":[{\"pos\":1.5},{\"pos\":3.5}]},{\"name\":\"paramInput\",\"type\":\"RangeInput\",\"props\":{\"param\":{\"value\":[{\"index\":0,\"name\":\"alpha\",\"vmin\":\"-5\",\"vmax\":\"5\",\"resolution\":100},{\"index\":1,\"name\":\"beta\",\"vmin\":\"-5\",\"vmax\":\"5\",\"resolution\":100},{\"index\":2,\"name\":\"delta\",\"vmin\":\"-1\",\"vmax\":\"1\",\"resolution\":100},{\"index\":3,\"name\":\"gamma\",\"vmin\":0,\"vmax\":\"10\",\"resolution\":100}]},\"restartOnInput\":{\"value\":true},\"activateBeforeRestart\":{\"value\":true}},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":87,\"y\":234,\"ports\":[{\"pos\":0.5350492880613362},{\"pos\":1.7332589285714286},{\"pos\":1.2037898936170213}]},{\"name\":\"clearCanvas\",\"type\":\"SignalInput\",\"props\":{\"signalName\":{\"value\":\"clear\"}},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":163,\"y\":395,\"ports\":[{\"pos\":1.5},{\"pos\":0.46984265734265734}]},{\"name\":\"iFilter\",\"type\":\"CountedFilter\",\"props\":{},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":233,\"y\":201,\"ports\":[{\"pos\":3.664325842696629},{\"pos\":0.803921568627451},{\"pos\":3.0766129032258065}]},{\"name\":\"fCount\",\"type\":\"Param\",\"props\":{\"data\":{\"value\":{\"count\":\"10\"}}},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":253,\"y\":305,\"ports\":[{\"pos\":1.5645371577574967}]}],\"links\":[{\"source\":{\"box\":\"solverParam\",\"port\":\"output\"},\"target\":{\"box\":\"solver\",\"port\":\"parameters\"}},{\"source\":{\"box\":\"canvas\",\"port\":\"input\"},\"target\":{\"box\":\"projection\",\"port\":\"output\"}},{\"source\":{\"box\":\"canvas\",\"port\":\"flush\"},\"target\":{\"box\":\"solver\",\"port\":\"finish\"}},{\"source\":{\"box\":\"canvas\",\"port\":\"output\"},\"target\":{\"box\":\"bitmap\",\"port\":\"input\"}},{\"source\":{\"box\":\"clearCanvas\",\"port\":\"output\"},\"target\":{\"box\":\"canvas\",\"port\":\"clear\"}},{\"source\":{\"box\":\"iFilter\",\"port\":\"count\"},\"target\":{\"box\":\"fCount\",\"port\":\"output\"}},{\"source\":{\"box\":\"iFilter\",\"port\":\"input\"},\"target\":{\"box\":\"solver\",\"port\":\"nextState\"}},{\"source\":{\"box\":\"iFilter\",\"port\":\"output\"},\"target\":{\"box\":\"paramInput\",\"port\":\"activator\"}},{\"source\":{\"box\":\"iFilter\",\"port\":\"output\"},\"target\":{\"box\":\"clearCanvas\",\"port\":\"activator\"}},{\"source\":{\"box\":\"ode\",\"port\":\"state\"},\"target\":{\"box\":\"solver\",\"port\":\"rhsState\"}},{\"source\":{\"box\":\"ode\",\"port\":\"oderhs\"},\"target\":{\"box\":\"solver\",\"port\":\"rhs\"}},{\"source\":{\"box\":\"solver\",\"port\":\"nextState\"},\"target\":{\"box\":\"projection\",\"port\":\"input\"}},{\"source\":{\"box\":\"initState\",\"port\":\"output\"},\"target\":{\"box\":\"solver\",\"port\":\"initState\"}},{\"source\":{\"box\":\"paramInput\",\"port\":\"output\"},\"target\":{\"box\":\"ode\",\"port\":\"parameters\"}},{\"source\":{\"box\":\"paramInput\",\"port\":\"input\"},\"target\":{\"box\":\"odeParam\",\"port\":\"output\"}}]}"}