{"name":"mandelbrot","description":"Mandelbrot set","info":"# Mandelbrot set\nThe Mandelbrot set is the set of points $c$ on complex plane for which the sequence (formula similar to the =[logistic mapping](/editor?sim=logistic-mapping-chaos))\n$$\nz_{n+1} = c-z_n^2, \\quad n=1,2,\\ldots\n$$\nis limited for $z_0=0$.\n","keywords":[],"script":"","public":true,"definition":"{\"boxes\":[{\"name\":\"testFde\",\"info\":{\"inputs\":[{\"name\":\"parameters\",\"format\":[2],\"help\":\"Parameters of FDE system\",\"hints\":[\"cx\",\"cy\"],\"pos\":1.5},{\"name\":\"state\",\"format\":[2],\"help\":\"State variables of FDE system\",\"hints\":[\"x\",\"y\"],\"pos\":0.7}],\"outputs\":[{\"name\":\"nextState\",\"format\":[2],\"help\":\"Next state of FDE system\",\"hints\":[\"x\",\"y\"],\"pos\":0.3}]},\"type\":\"CxxFde\",\"props\":{\"src\":{\"value\":\"struct logistics {\\n    int paramCount() const {\\n        return 2;       // cx,cy\\n    }\\n    const char *paramNames() const {\\n        return \\\"cx,cy\\\"; // Can also return empty string or null ptr\\n    }\\n    int varCount() const {\\n        return 2;       // x,y\\n    }\\n    const char *varNames() const {\\n        return \\\"x,y\\\";   // Can also return empty string or null ptr\\n    }\\n\\n    // Auxiliary parameters\\n    double cx, cy;\\n    void prepare(const double *param) {\\n        cx = param[0];\\n        cy = param[1];\\n    }\\n\\n    void nextState(double *out, const double *param, const double *state) const {\\n        double x = state[0], y = state[1];\\n        out[0] = cx - x*x + y*y;\\n        out[1] = cy - 2*x*y;\\n    }\\n};\"},\"srcExample\":{\"value\":\"struct logistics {\\n    int paramCount() const {\\n        return 1;       // c\\n    }\\n    const char *paramNames() const {\\n        return \\\"c\\\";     // Can also return empty string or null ptr\\n    }\\n    int varCount() const {\\n        return 1;       // x\\n    }\\n    const char *varNames() const {\\n        return \\\"x\\\";     // Can also return empty string or null ptr\\n    }\\n\\n    // Auxiliary parameters\\n    double c;\\n    void prepare(const double *param) {\\n        c = param[0];\\n    }\\n\\n    void nextState(double *out, const double *param, const double *state) const {\\n        out[0] = c - state[0]*state[0];\\n    }\\n};\\n\"},\"useQmake\":{\"value\":true}},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":179,\"y\":259,\"ports\":[{\"pos\":1.664519123283296},{\"pos\":0.7},{\"pos\":0.3}]},{\"name\":\"sdeParam\",\"info\":{\"inputs\":[],\"outputs\":[{\"name\":\"output\",\"help\":\"Parameter data; port format is determined by peer\",\"pos\":3.5}]},\"type\":\"Param\",\"props\":{\"data\":{\"value\":{\"cx\":0,\"cy\":0}}},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":62,\"y\":56,\"ports\":[{\"pos\":3.5}]},{\"name\":\"initState\",\"info\":{\"inputs\":[],\"outputs\":[{\"name\":\"output\",\"help\":\"Parameter data; port format is determined by peer\",\"pos\":3.5}]},\"type\":\"Param\",\"props\":{\"data\":{\"value\":{\"x\":0,\"y\":0}}},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":277,\"y\":116,\"ports\":[{\"pos\":3.272322969397147}]},{\"name\":\"solver\",\"info\":{\"inputs\":[{\"name\":\"parameters\",\"format\":[3],\"help\":\"number of integration steps to take (0 means infinite), number of initial steps to skip, number of steps between outputs (0 means output final state only)\",\"hints\":[\"n\",\"nskip\",\"nout\"],\"pos\":1.7},{\"name\":\"initState\",\"help\":\"Initial state for the FDE system\",\"pos\":1.3},{\"name\":\"fdeIn\",\"help\":\"Next state of the FDE system, obtained from the FDE\",\"pos\":2.7},{\"name\":\"stop\",\"help\":\"Any data on this port causes iterator to terminate\",\"pos\":0.5}],\"outputs\":[{\"name\":\"nextState\",\"help\":\"Next state of the FDE system, for further processing\",\"pos\":3.7},{\"name\":\"fdeOut\",\"help\":\"System state to pass to the FDE next state calculator\",\"pos\":2.3},{\"name\":\"finish\",\"format\":[0],\"help\":\"Data is emitted to this port as soon as the iterations finish\",\"pos\":3.3}]},\"type\":\"FdeIterator\",\"props\":{},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":313,\"y\":259,\"ports\":[{\"pos\":1.2772612003381234},{\"pos\":1.6373626373626373},{\"pos\":2.7},{\"pos\":0.5},{\"pos\":3.7},{\"pos\":2.3},{\"pos\":3.3}]},{\"name\":\"solverParam\",\"info\":{\"inputs\":[],\"outputs\":[{\"name\":\"output\",\"help\":\"Parameter data; port format is determined by peer\",\"pos\":3.5}]},\"type\":\"Param\",\"props\":{\"data\":{\"value\":{\"n\":\"100\",\"nskip\":\"0\",\"nout\":\"0\"}}},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":326,\"y\":184,\"ports\":[{\"pos\":3.38146735259507}]},{\"name\":\"canvas\",\"info\":{\"inputs\":[{\"name\":\"input\",\"format\":[2],\"help\":\"2D input for canvas\",\"pos\":1.3},{\"name\":\"flush\",\"help\":\"Any incoming signal on this port causes this canvas to flush its data (i.e., pass the entire canvas data to the output port)\",\"pos\":1.7},{\"name\":\"clear\",\"help\":\"Any incoming signal on this port causes this canvas to clear its data and then flush\",\"pos\":2.5}],\"outputs\":[{\"name\":\"output\",\"format\":[100,100],\"help\":\"Canvas output (each data point is a 2D array of canvas cell data)\",\"pos\":3.5}]},\"type\":\"Canvas\",\"props\":{\"param\":{\"value\":{\"x\":{\"vmin\":\"-0.5\",\"vmax\":\"2\",\"resolution\":501},\"y\":{\"vmin\":\"-1.25\",\"vmax\":\"1.25\",\"resolution\":501}}},\"refreshInterval\":{\"value\":1000},\"timeCheckCount\":{\"value\":100},\"clearOnRestart\":{\"value\":false}},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":52,\"y\":456,\"ports\":[{\"pos\":1.253125},{\"pos\":1.7},{\"pos\":0.4717036745922578},{\"pos\":3.5}]},{\"name\":\"bitmap\",\"info\":{\"inputs\":[{\"name\":\"input\",\"help\":\"2D input for bitmap\",\"pos\":1.5}],\"outputs\":[]},\"type\":\"Bitmap\",\"props\":{\"fileName\":{\"value\":\"result.png\"}},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":54,\"y\":514,\"ports\":[{\"pos\":1.5}]},{\"name\":\"solverTrigger\",\"info\":{\"inputs\":[{\"name\":\"control_in\",\"help\":\"Controlling value input port\",\"pos\":1.7},{\"name\":\"value_in\",\"help\":\"Replicated value input port\",\"pos\":1.3}],\"outputs\":[{\"name\":\"control_out\",\"help\":\"Controlling value output port\",\"pos\":3.3},{\"name\":\"value_out\",\"help\":\"Replicated value output port\",\"pos\":3.7}]},\"type\":\"Replicator\",\"props\":{},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":170,\"y\":184,\"ports\":[{\"pos\":1.7},{\"pos\":1.3},{\"pos\":3.3},{\"pos\":3.7}]},{\"name\":\"paramGrid\",\"info\":{\"inputs\":[{\"name\":\"input\",\"help\":\"Incoming points\",\"pos\":1.5}],\"outputs\":[{\"name\":\"output\",\"help\":\"Sequence of grid of points\",\"pos\":3.3},{\"name\":\"flush\",\"format\":[0],\"help\":\"Data is emitted to this port as soon as one input data frame is processed\",\"pos\":3.7}]},\"type\":\"GridGenerator\",\"props\":{\"param\":{\"value\":[{\"index\":0,\"vmin\":\"-0.5\",\"vmax\":\"2\",\"count\":500},{\"index\":1,\"vmin\":\"-1.25\",\"vmax\":\"1.25\",\"count\":500}]}},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":62,\"y\":112,\"ports\":[{\"pos\":1.5},{\"pos\":3.7444444444444445},{\"pos\":3.1589147286821704}]},{\"name\":\"Scalarize 1\",\"info\":{\"inputs\":[{\"name\":\"input\",\"help\":\"Input data port\",\"pos\":1.5}],\"outputs\":[{\"name\":\"output\",\"format\":[1],\"help\":\"Output data port\",\"pos\":3.5}]},\"type\":\"Scalarize\",\"props\":{\"param\":{\"value\":\"norm_2\"}},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":314,\"y\":328,\"ports\":[{\"pos\":1.5},{\"pos\":3.5}]},{\"name\":\"threshold\",\"info\":{\"inputs\":[{\"name\":\"threshold\",\"format\":[1],\"help\":\"Threshold port\",\"hints\":[\"threshold\"],\"pos\":1.7},{\"name\":\"input\",\"format\":[1],\"help\":\"Input data port\",\"pos\":1.3}],\"outputs\":[{\"name\":\"output\",\"format\":[1],\"help\":\"Output data port\",\"pos\":3.5}]},\"type\":\"ThresholdDetector\",\"props\":{\"param\":{\"value\":\"less\"},\"quiet\":{\"value\":false},\"thresholdValue\":{\"value\":\"2\"}},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":325,\"y\":390,\"ports\":[{\"pos\":0.5811640635429182},{\"pos\":1.5297052809388336},{\"pos\":2.463913344544465}]},{\"name\":\"Valve 1\",\"info\":{\"inputs\":[{\"name\":\"valve\",\"format\":[1],\"help\":\"Filter controller (nonzero data causes incoming point to pass through, zero data causes it to be lost)\",\"pos\":2.5},{\"name\":\"input\",\"help\":\"Incoming points\",\"pos\":1.5}],\"outputs\":[{\"name\":\"output\",\"help\":\"Filtered points\",\"pos\":3.5}]},\"type\":\"Valve\",\"props\":{},\"status\":{\"level\":\"ok\",\"text\":\"Ok\"},\"x\":103,\"y\":390,\"ports\":[{\"pos\":0.4869029275808937},{\"pos\":1.5},{\"pos\":3.5}]}],\"links\":[{\"source\":{\"box\":\"testFde\",\"port\":\"nextState\"},\"target\":{\"box\":\"solver\",\"port\":\"fdeIn\"}},{\"source\":{\"box\":\"solver\",\"port\":\"fdeOut\"},\"target\":{\"box\":\"testFde\",\"port\":\"state\"}},{\"source\":{\"box\":\"solver\",\"port\":\"parameters\"},\"target\":{\"box\":\"solverParam\",\"port\":\"output\"}},{\"source\":{\"box\":\"canvas\",\"port\":\"output\"},\"target\":{\"box\":\"bitmap\",\"port\":\"input\"}},{\"source\":{\"box\":\"testFde\",\"port\":\"parameters\"},\"target\":{\"box\":\"solverTrigger\",\"port\":\"control_out\"}},{\"source\":{\"box\":\"solverTrigger\",\"port\":\"value_in\"},\"target\":{\"box\":\"initState\",\"port\":\"output\"}},{\"source\":{\"box\":\"solverTrigger\",\"port\":\"value_out\"},\"target\":{\"box\":\"solver\",\"port\":\"initState\"}},{\"source\":{\"box\":\"paramGrid\",\"port\":\"input\"},\"target\":{\"box\":\"sdeParam\",\"port\":\"output\"}},{\"source\":{\"box\":\"paramGrid\",\"port\":\"output\"},\"target\":{\"box\":\"solverTrigger\",\"port\":\"control_in\"}},{\"source\":{\"box\":\"solver\",\"port\":\"nextState\"},\"target\":{\"box\":\"Scalarize 1\",\"port\":\"input\"}},{\"source\":{\"box\":\"threshold\",\"port\":\"input\"},\"target\":{\"box\":\"Scalarize 1\",\"port\":\"output\"}},{\"source\":{\"box\":\"Valve 1\",\"port\":\"valve\"},\"target\":{\"box\":\"threshold\",\"port\":\"output\"}},{\"source\":{\"box\":\"paramGrid\",\"port\":\"output\"},\"target\":{\"box\":\"Valve 1\",\"port\":\"input\"}},{\"source\":{\"box\":\"paramGrid\",\"port\":\"flush\"},\"target\":{\"box\":\"canvas\",\"port\":\"flush\"}},{\"source\":{\"box\":\"Valve 1\",\"port\":\"output\"},\"target\":{\"box\":\"canvas\",\"port\":\"input\"}}]}"}