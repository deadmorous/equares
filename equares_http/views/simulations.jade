extends page
block vars
    - var title = 'Simulations'

block otherCss
    style.
        #simtable {
            border-spacing: 10px 5px;
        }
        #simtable td, #simtable th {
            border-radius: 5px;
            text-align: center;
            padding: 3px 5px;
        }
        #simtable th {
            background-color: #ddc;
        }
        #simtable tr.odd {
            background-color: #ffe;
        }
        #simtable tr.odd td {
            border: 1px solid #f4f4e4;
        }
        #simtable tr.even {
            background-color: #eed;
        }
        #filter {
            padding: 10px 20px 10px 20px;
        }
        #simulations {
            padding: 0px 20px 0px 20px;
            border-top: 1px solid #ccc;
            overflow: auto;
        }
        #filter input[type='text'] {
            border: 1px solid #ccc;
        }
        #filter input[type='text'],
        #filter input[type='submit'] {
            margin-left: 5px;
            margin-right: 15px;
        }
        #filter input[type='checkbox'] {
            margin-left: 5px;
            margin-right: 5px;
        }
        #filter input[type='checkbox'] + * {
            margin-right: 15px;
        }
        #filter a {
            font-size: small;
        }
        #advanced-search {
            display: inline;
        }
        .page-numbers {
            padding-bottom: 10px;
            padding-top: 10px;
        }
        .page-numbers > a, .page-numbers > span {
            margin: 7px;
            padding: 2px 5px;
            border-radius: 5px;
        }
        .page-numbers > a {
            background-color: #fd8;
        }
        .page-numbers > span {
            background-color: #ddc;
            font-weight: bold;
        }
        .error {
            font-weight: bold;
            color: #c00;
        }
        #simtable a {
            text-decoration: none;
            color: #2a6;
        }
        #simtable a:link {
        }
        #simtable a:visited {
            color: #172;
        }
        #simtable a:hover {
            text-decoration: underline;
        }

        .page-numbers a {
            text-decoration: none;
            color: #55b;
        }
        .page-numbers a:hover {
            text-decoration: underline;
        }

block otherScripts
    script.
        var findSim
        ;(function() {
            function wrap(tag) { return $("<" + tag + "></" + tag + ">") }
            function searchQuery() {
                var f = $('#filter > form')[0].elements
                var result = {}
                for (var i=0, n=f.length; i<n; ++i) {
                    var e = $(f[i])
                    if (!e.is(':visible'))
                        continue
                    var name = e.attr('name')
                    switch (e.attr('type')) {
                    case 'text':
                        if (e[0].value.length > 0)
                            result[name] = e[0].value
                        break
                    case 'checkbox':
                        result[name] = e[0].checked
                        break
                    }
                }
                return result
            }
            var pagecount = 0,   pagenum = 0

            function addPage(j, page) {
                if (page == pagenum)
                    j.append(wrap('span').text(page+1))
                else
                    j.append(wrap('a').text(page+1).attr('href', '#'))
            }
            function addPages(j, center, cache) {
                var borderPages = 4,
                    n1 = Math.max(0, center-borderPages),
                    n2 = Math.min(pagecount-1, center+borderPages)
                for (var i=n1; i<=n2; ++i) {
                    if (!cache[i]) {
                        if (i>0 && !cache[i-1])
                            j.append(wrap('span').text('...'))
                        addPage(j, i)
                        cache[i] = 1
                    }
                }
            }
            function makePages(pages, page) {
                pagecount = pages
                pagenum = page
                var j = $('.page-numbers')
                j.html('')
                if (pages == 1)
                    return
                var cache = {}
                addPages(j, 0, cache)
                addPages(j, page, cache)
                addPages(j, pages-1, cache)
                j.children('a').click(function(e) {
                    e.preventDefault()
                    findSim($(this).text()-1)
                })
            }

            findSim = function(page) {
                $('#apply-filter').attr('disabled', true)
                var rq = searchQuery()
                if (typeof page == 'number')
                    rq.page = page
                $.get('/simheaders', rq)
                    .done(function(data) {
                        var headers = JSON.parse(data), tbl = $('#simtable')
                        function header(i, role) {
                            var h = headers[i]
                            var result = typeof h == 'object'? h[role]: h
                            return result
                        }
                        function hname(i) { return header(i, 'name') }
                        function htitle(i) { return header(i, 'title') }
                        tbl.html('')
                        $.get('simtable', rq)
                            .done(function(data) {
                                data = JSON.parse(data)
                                var sims = data.sims
                                if (sims.length > 0) {
                                    var hdr = wrap('tr').appendTo(tbl)
                                    for (var i in headers)
                                        hdr.append(wrap('th').html(htitle(i)))
                                    for (var j in sims) {
                                        var sim = sims[j]
                                        var row = wrap('tr').appendTo(tbl).addClass((+j+1)&1? 'odd': 'even')
                                        for (var i in headers) {
                                            var h = hname(i),   x = sim[h],   s
                                            switch (typeof x) {
                                            case 'boolean':
                                                s = x.toString()
                                                break
                                            default:
                                                if (x instanceof Array)
                                                    s = x.join(', ')
                                                else if (h == 'date')
                                                    s = new Date(x).toLocaleString()
                                                else
                                                    s = x
                                            }
                                            if (h == 'name')
                                                s = '<a href="/editor?' + $.param({sim: sim._id}) + '">' + s + '</a>'
                                            row.append(wrap('td').html(s))
                                        }
                                    }
                                }
                                else
                                    tbl.append(wrap('tr').append(wrap('td').text('No results are found')))
                                makePages(data.pages, rq.page || 0)
                            })
                            .fail(function(xhr) {
                                tbl.append(wrap('tr').append(wrap('td').addClass('error').text('Error: ' + (xhr.responseText || xhr.statusText || xhr.status))))
                                makePages(0, 0)
                            })
                            .always(function() {
                                $('#apply-filter').attr('disabled', false)
                            })
                    })
            }
            ctm.initPage.push(function(c1, c2, c3) {
                $('#after_login_action').click(findSim)
                $('#after_logout_action').click(findSim)
                $('#advanced-search').hide()
                $('#toggle-advanced').click(function(e) {
                    e.preventDefault()
                    var adv = $('#advanced-search'), wasadv = adv.is(':visible')
                    $(this).html(wasadv? 'Advanced': 'Basic')
                    $('#advanced-search').fadeToggle('fast', findSim)
                })
                $('#apply-filter').click(function(e) {
                    e.preventDefault()
                    findSim()
                })
                c2.addResizeHandler(function() {
                    $('#simulations').height($(this.dom).height()-$('#filter').outerHeight())
                })
            })
        })()
    case req.query.mode
        when 'my'
            script.
                ctm.initPage.push(function() {
                    var f = $('#filter > form')[0].elements
                    for (var i=0, n=f.length; i<n; ++i) {
                        var e = $(f[i])
                        var name = e.attr('name')
                        if (name == 'user') {
                            e[0].value = '#{req.user.username}'
                            break
                        }
                    }
                    $('#toggle-advanced').click()
                })
        when 'public'
            script.
                ctm.initPage.push(function() {
                    var f = $('#filter > form')[0].elements
                    for (var i=0, n=f.length; i<n; ++i) {
                        var e = $(f[i])
                        var name = e.attr('name')
                        if (name == 'public') {
                            e[0].checked = true
                            break
                        }
                    }
                    $('#toggle-advanced').click()
                })
        default
            script.
                ctm.initPage.push(findSim)

block content
    #filter
        | Filter<br/>
        form
            label Text
            input(type='text' name='text')
            #advanced-search
                label Username
                input(type='text' name='user')
                label Keywords
                input(type='text' name='keywords')
                input(type='checkbox' name='public')
                span Public only
            input#apply-filter(type='submit' value='Apply filter')
            a#toggle-advanced(href='#') Advanced
    #simulations
        .page-numbers
        table#simtable
        .page-numbers

block extras
    #after_login_action(display='none')
    #after_logout_action(display='none')
